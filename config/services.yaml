imports:
    - { resource: ../_iam/src/Infrastructure/Framework/services.yaml }
    - { resource: ../_notifier/src/Infrastructure/Framework/services.yaml }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    release.version: 'v0.1.x'
    setting.is_user_registration_enabled: false
    setting.is_user_password_recovery_enabled: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Enqueue\Dbal\DbalConnectionFactory:
        factory: ['Ecotone\Dbal\DbalConnection', 'create']
        arguments: ['@Doctrine\DBAL\Connection']


    #
    # Oauth2 bundle override
    #
    League\Bundle\OAuth2ServerBundle\Entity\AccessToken:
        class: App\Entity\AccessToken

    League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface:
        class: App\Repository\AccessTokenRepository
        decorates: 'League\Bundle\OAuth2ServerBundle\Repository\AccessTokenRepository'




    App\Tests\Fixture\Factory\UserFactory:
        arguments:
            - '@security.user_password_hasher'
        tags: ['foundry.factory']
